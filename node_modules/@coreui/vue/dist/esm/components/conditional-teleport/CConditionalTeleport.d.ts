import { PropType } from 'vue';
declare const CConditionalTeleport: import("vue").DefineComponent<import("vue").ExtractPropTypes<{
    /**
     * An HTML element or function that returns a single element, with `document.body` as the default.
     *
     * @since 5.0.0
     */
    container: {
        type: PropType<HTMLElement | (() => HTMLElement) | string>;
        default: string;
    };
    /**
     * Render some children into a different part of the DOM
     */
    teleport: {
        type: BooleanConstructor[];
        default: boolean;
    };
}>, () => import("vue").VNode<import("vue").RendererNode, import("vue").RendererElement, {
    [key: string]: any;
}>, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    /**
     * An HTML element or function that returns a single element, with `document.body` as the default.
     *
     * @since 5.0.0
     */
    container: {
        type: PropType<HTMLElement | (() => HTMLElement) | string>;
        default: string;
    };
    /**
     * Render some children into a different part of the DOM
     */
    teleport: {
        type: BooleanConstructor[];
        default: boolean;
    };
}>> & Readonly<{}>, {
    container: string | HTMLElement | (() => HTMLElement);
    teleport: boolean;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export { CConditionalTeleport };
